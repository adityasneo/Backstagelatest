app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost:3000

organization:
  name: My Company

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: pg
    connection: 
      host: 127.0.0.1
      port: 5432
      user: postgres
      password: secret
  cache:
    store: memory
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      token: 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
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # '/test':
  #   target: 'https://example.com'
  #   changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  environment: development
  providers: 
    github:
      development:
        clientId: 49aec14d9696a87d5e7a
        clientSecret: d5b25ac018cc19a88518d6e434380729a043ee45
    gitlab:
      development:
        clientId: f195605921ce1d663e05fad9b90d1d371dbb787b738112943b39de016845b14a
        clientSecret: 0c88a906e498c9bed9bdeb707c45633756f28607c0eda90a12a8d468750571c5      

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/entities.yaml

    # Local example template
    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]

    # Local example organizational data
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]

    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [User, Group]
    - type: url
      target: https://github.com/adityasneo/backstage/blob/adbackstage/ResourceCatalog.yaml
      rules:
        - allow: [User, Group, Resource]
    - type: url
      target: https://github.com/adityasneo/backstage/blob/adbackstage/API-catalog.yaml
      rules:
        - allow: [API]
    - type: url
      target: https://github.com/adityasneo/backstage/blob/adbackstage/GroupUserCatalog.yaml
      rules:
        - allow: [User, Group]
    - type: url
      target: https://github.com/adityasneo/backstage/blob/adbackstage/Domaincatalog.yaml
      rules:
        - allow: [User, Group, Domain]
    - type: url
      target: https://github.com/adityasneo/backstage/blob/adbackstage/Systemcatalog.yaml
      rules:
        - allow: [User, Group, System]
    - type: url
      target: https://github.com/adityasneo/backstageDocs/blob/master/backstagesneo/backstageneo/software-templates-neo/test-docs-template/template.yaml
      rules:
        - allow: [Template]  
    - type: url
      target: https://github.com/adityasneo/backstageDocs/blob/master/backstagesneo/backstageneo/software-templates-neo/demo-template/template.yaml
      rules:
        - allow: [Template]
    - type: file
      target: template.yaml 
    - type: url
      target: https://github.com/adityasneo/backstageDocs/blob/master/backstagesneo/backstageneo/software-templates-neo/component-template/template-descriptor.yaml
      rules:
        - allow: [Template]
    - type: file
      target: template.yaml
    - type: url
      target: https://github.com/adityasneo/backstageDocs/blob/master/backstagesneo/backstageneo/software-templates-neo/sneo-template/template.yaml
      rules:
        - allow: [Template]
    - type: file
      target: template.yaml
